const path=require('path');

const {Comment}=require(path.join(__dirname,'..','Model','comment.model'));

const {register}=require(path.join(__dirname,'..','Model','userDetails.model'));

const {Post}=require(path.join(__dirname,'..','Model','posts.model'));

async function createCommentUnderMainPost(req,res){
    try{
        const {slug,commentdate,commentcontent}=req.params;
        Post.findOne({slug:slug},function(error,result){
            if(error){

            }
            else{
                if(result){
                    register.find({ autoGeneratedUserName:req.session.userNameIdentification},function(problem,output){
                        if(problem){

                        }
                        else{
                            if(output){
                                const newMainComment=new Comment({
                                    mainPost:{
                                        id:result._id,
                                        slug:slug
                                    },
                                    parentComment:result._id,
                                    author:result. autoGeneratedUserName,
                                    childComment:{
                                        date:commentdate,
                                        commentor:req.session.userNameIdentification,
                                        id:output._id,
                                        content:commentcontent
                                        
                                    }
                                })
                                res.json({
                                    mainPost:{
                                        id:result._id,
                                        slug:slug

                                    },
                                    parentComment:result._id,
                                    childComment:{
                                        date:commentdate,
                                        commentor:req.session.userNameIdentification,
                                        content:commentcontent
                                    }



                                }).status(201);

                                newMainComment.save();
            
                            }
                        }

                    })
                }
            }
        })

        

    }catch(err){
        console.log(`createCommentUnderMainPost: ${err}`);
    }
}

async function createCommentUnderAComment(req,res){
    try{
        const {slug,commentdate,commentcontent,parentUsername}=req.params;
        Post.findOne({slug:slug},function(error,result){
            if(error){

            }
            else{
                if(result){
                    register.find({ autoGeneratedUserName:req.session.userNameIdentification},function(problem,output){
                        if(problem){

                        }
                        else{
                            if(output){
                                register.findOne({autoGeneratedUserName:parentUsername},async function(issues,finalResult){
                                    if(issues){

                                    }
                                    else{
                                        if(finalResult){
                                            async function createComment(){
                                                const newCommentUnderAComment=new Comment({
                                                    mainPost:{
                                                        id:result._id,
                                                        slug:slug
                                                    },
                                                    parentComment:{
                                                        id:finalResult._id,
                                                        author:parentUsername
                                                    },
                                                    childComment:{
                                                        date:commentdate,
                                                        commentor:req.session.userNameIdentification,
                                                        id:output._id,
                                                        content:commentcontent
                                                        
                                                    }
                                                })
                                                
                                            newCommentUnderAComment.save();
                                            }
                                            await createComment();
                                            res.json({
                                                mainPost:{
                                                    id:result._id,
                                                    slug:slug
            
                                                },
                                                parentComment:{
                                                id:finalResult._id,
                                                author:parentUsername
                                                },
                                                childComment:{
                                                    date:commentdate,
                                                    commentor:req.session.userNameIdentification,
                                                    content:commentcontent
                                                }
            
            
            
                                            }).status(201);
            
                                        }
                                    }

                                })
            
                            }
                        }

                    })
                }
            }
        })

    }catch(err){

        console.log(`createCommentUnderAComment :${err}`)

    }

}

module.exports={
    createCommentUnderMainPost,
    createCommentUnderAComment
}